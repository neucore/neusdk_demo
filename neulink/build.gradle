apply plugin: 'com.android.library'
//apply plugin: 'org.greenrobot.greendao'//添加
apply plugin: 'android-aspectjx'

def packageTime(){
    return new Date().format("yyyyMMddHHmmSS");
}

def versionMajor = 1
def versionMinor = 4
def versionPatch = 10
android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.build_tools_version


    defaultConfig {
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode rootProject.ext.version_code
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.aliyun.dpa:oss-android-sdk:2.7.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    //implementation 'com.squareup.okhttp3:okhttp:4.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okio:okio:1.14.0'
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.yanzhenjie:permission:2.0.0-rc4'
    implementation 'com.qianwen:okhttp-utils:3.8.0'
    implementation 'com.qianwen:update-app:3.5.2'//实现自我更新
    implementation 'commons-net:commons-net:3.8.0'
    implementation 'cn.hutool:hutool-all:5.6.0'
    implementation 'org.greenrobot:greendao:3.3.0' // add library
}

task makeJar(type: Copy) {
    def SDK_BASENAME = "neulink";
    def SDK_VERSION = "${versionMajor}.${versionMinor}.${versionPatch}"
    def SDK_RELEASE = SDK_BASENAME+"-"+SDK_VERSION+".jar";
    delete 'build/libs/*' //删除build/libs/文件夹下名字为TestJarV1.jar的jar包
    from('build/intermediates/packaged-classes/release/') //从这个目录下取出默认jar包
    into('build/libs/') //将jar包输出到指定目录下
    include('classes.jar')
    rename('classes.jar', SDK_RELEASE) //自定义jar包的名字
}

makeJar.dependsOn(build)

aspectjx {
    //关闭AspectJX功能
    enabled true

    //排除所有package路径中包含`android.support`的class文件及库（jar文件）
    exclude 'android.support'
    //exclude 'com.fasterxml'
    exclude '.jar'
    //includes the libs that you want to weave
    //includeJarFilter 'universal-image-loader', 'AspectJX-Demo/library'

    //excludes the libs that you don't want to weave
    //excludeJarFilter 'universal-image-loader'

}

